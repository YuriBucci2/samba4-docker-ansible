---

- name: Update facts
  ansible.builtin.setup:
    gather_subset: min    

- name: Create Samba PDC Container
  community.docker.docker_container:
    name: samba-pdc
    image: "{{ SAMBA_IMAGE }}"
    state: started
    recreate: yes
    restart_policy: always
    network_mode: host
    privileged: yes
    hostname: "{{ inventory_hostname }}.{{ SAMBA_DC_REALM }}"
    env:
      SAMBA_DC_REALM: "{{ SAMBA_DC_REALM }}"
      SAMBA_DC_ADMIN_PASSWD: "{{ SAMBA_DC_ADMIN_PASSWD }}"
      SAMBA_DC_ACTION: provision
      SAMBA_DC_DOMAIN: "{{ SAMBA_DC_DOMAIN }}"
      SAMBA_INTERFACE: "{{ ansible_default_ipv4.interface }}"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - "{{ SAMBA_DIR_PATH }}/domain:/var/lib/samba"
      - "{{ SAMBA_DIR_PATH }}/sysvol:/var/lib/samba/sysvol"
      - "{{ SAMBA_DIR_PATH }}/config:/etc/samba"
      - "{{ SAMBA_DIR_PATH }}/logs:/var/log/samba"
      - "{{ FILESERVER.SHARE_PATH }}:/samba/shares"

- name: Wait Samba be ready
  ansible.builtin.wait_for:
    port: 445
    delay: 5

- name: Force update DNS
  community.docker.docker_container_exec:
    container: samba-pdc
    command: /bin/bash -c "samba_dnsupdate --all-names --verbose"

- name: Backup idmap
  community.docker.docker_container_exec:
    container: samba-pdc
    command: /bin/bash -c "tdbbackup -s .bak /var/lib/samba/private/idmap.ldb"
  register: result

- name: Fetch idpmap
  run_once: true
  ansible.builtin.fetch: 
    src: "{{ SAMBA_DIR_PATH }}/domain/private/idmap.ldb.bak"
    dest: buffer/ 
    flat: yes