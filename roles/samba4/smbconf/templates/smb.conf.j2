################# Global Configuration ##################
# Do not modify!!! unless you know what you're doing

[global]
        bind interfaces only = Yes
        interfaces = lo {{ ansible_default_ipv4.interface }}
        {% if not inventory_hostname in groups['fileserver'] -%}
        netbios name = {{ inventory_hostname | upper }}
        {% endif -%}
        realm = {{ SAMBA_DC_REALM | upper }}
        server role = {% if not inventory_hostname in groups['fileserver'] %}active directory domain controller{% else %}member server{% endif +%}
        workgroup = {{ SAMBA_DC_DOMAIN }}
        {% if not inventory_hostname in groups['fileserver'] -%}
        server services = s3fs, rpc, nbt, wrepl, ldap, cldap, kdc, drepl, winbindd, ntp_signd, kcc, dnsupdate
        {% endif -%}
        {% if inventory_hostname in groups['pdc'] -%}
        idmap_ldb:use rfc2307 = yes
        {% endif -%}
        vfs objects = {% if FILESERVER.ENABLE_RECYCLE_SHARE %}recycle,{% endif %}{% if AUDIT.ENABLE %} full_audit,{% endif %} acl_xattr{% if not inventory_hostname in groups['fileserver'] %}, dfs_samba4{% endif +%}
        ldap server require strong auth = no
        {% if  inventory_hostname in groups['fileserver'] -%}
        winbind use default domain = yes
        idmap config * : backend = autorid
        idmap config * : range = 10000-9999999
        {% endif -%}
        {% if not inventory_hostname in groups['pdc'] and not inventory_hostname in groups['dc'] or FILESERVER.ENABLE_FS_ON_DC -%}
        {% if FILESERVER.ENABLE_ENUM_HIDE -%}
access based share enum = yes
        {% endif -%}    
        {% endif %}    
        
{% if not inventory_hostname in groups['pdc'] and not inventory_hostname in groups['dc'] or FILESERVER.ENABLE_FS_ON_DC %}
{% if FILESERVER.ENABLE_RECYCLE_SHARE %}
################# Recycle #######################

# Se habilitado mantém a estrutura de diretórios ao mover os arquivos para a Lixeira
recycle:keeptree = True
# Se habilitado preserva arquivos deletados com o mesmo nome criando uma copia do mesmo no repositório da Lixeira
recycle:versions = True
# Diretório da Lixeira seguido da váriavel "%U" que identifica o nome de usuário, ou seja o arquivo que foi deletado pelo usuário João será salvo na pasta do mesmo e com isso facilitando a visualização de quem deletou o arquivo
recycle:repository = /samba/shares/Recycle/%U
# Extensões de arquivos e pastas que não serão tratadas pela Lixeira
recycle:exclude = *.tmp, *.log, *.obj, ~*.*, *.bak
recycle:exclude_dir = tmp, cache, profiles

{% endif %}
{% endif %}

{% if AUDIT.ENABLE %}
################# Audit #######################

full_audit:prefix = %I|%m|%S
full_audit:success = mkdirat pread pwrite renameat unlinkat create_file
full_audit:failure = none
full_audit:facility = LOCAL5
full_audit:priority = notice
{% endif %}

{% if not inventory_hostname in groups['fileserver'] %}
################# Default Shares ##################
# Do not modify!!! unless you know what you're doing

[sysvol]
        path = /var/lib/samba/sysvol
        read only = No

[netlogon]
        path = /var/lib/samba/sysvol/{{ SAMBA_DC_REALM }}/scripts
        read only = No
{% endif %}

{% if not inventory_hostname in groups['pdc'] and not inventory_hostname in groups['dc'] or FILESERVER.ENABLE_FS_ON_DC %}
{% if FILESERVER.ENABLE_RECYCLE_SHARE %}
################# Recycle ###################

[Recycle]
path = /samba/shares/Recycle
read only = no
browseable = no

{% endif %}
################# Custom Shares ###################

### Example share and advanced options ###
# [Name_of_your_share]
# path = /Directory/Example
# read only = no
# browseable = yes
# hide dot files = yes # Hide files start with a dot (.)
# hide files = /$*/ # Hide selected files. example files start with ($)
# hide special files = yes # Hide pipes, sockets, devices ...
# hide unreadable = yes # Hide files with no read permissions
# hide unwriteable files = yes # Hide files with no write permissions
# veto files = /*.exe/*.bat/*.cmd # Define which extensions will be blocked (will not be saved)

{% if FILESERVER.ENABLE_PUBLIC_SHARE %}
[Public]
path = /samba/shares/Public
read only = no
{% if FILESERVER.VETO_FILES.ENABLE %}
veto files = {{ FILESERVER.VETO_FILES.EXTENSIONS }}
{% endif %}
{% endif %}

{% if FILESERVER.ENABLE_HOME_SHARE %}
[Users]
path = /samba/shares/Users
read only = no
{% if FILESERVER.VETO_FILES.ENABLE %}
veto files = {{ FILESERVER.VETO_FILES.EXTENSIONS }}
{% endif %}
{% endif %}
{% endif %}